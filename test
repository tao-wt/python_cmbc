#!/usr/bin/env pythonPLY# encoding:utf-8PLY__author__ = 'sainter'PLYPLYimport sysPLYsys.path.append("..")PLYfrom lib.LogicSQLClass import *PLYfrom lib.ParamikoClass import *PLYimport subprocessPLYimport multiprocessingPLYfrom optparse import OptionParserPLYPLYt = SQLClass()PLYuseUser = 'zhuser'PLYuserInfo = t.findUserPass(useUser)PLYfor i in userInfo:PLYTABuser = i[0]PLYTABport = i[1]PLYTABpasswd = i[2]PLYPLYdef helpFunc(a,b,c,d):PLYTABprint "USAGE:"PLYTABprint "EXAMPLE: '\033[1;33;40mpython %s -i IpAddr -M ModuleName\033[0m' or '\033[1;33;40mpython %s -a -s\033[0m'" %(sys.argv[0],sys.argv[0])PLYTABprint "-h or --help for help."PLYTABprint "-M or --module for modulename,can use ',' example:\033[1;33;40m python %s -M acp,cmp,nav\033[0m" %sys.argv[0]PLYTABprint "-m or --mid for mid,can use ',' example:\033[1;33;40m python %s -m head/tail \033[0m" %sys.argv[0]PLYTABprint "-i or --ip for ip address,can use ',' example:\033[1;33;40m python %s -i 192.168.199.117,192.168.199.118\033[0m" %sys.argv[0]PLYTABprint "-a or --all for all module check',' example:\033[1;33;40m python %s -a\033[0m" %sys.argv[0]PLYTABprint "-s or --super yes or not check supervise,default:False. example:\033[1;33;40m python %s -a -s\033[0m" %sys.argv[0]PLYTABsys.exit(3)PLYPLYdef verFunc(a,b,c,d):PLYTABprint "Version 0.1.2"PLYTABsys.exit(3)PLYPLYparser = OptionParser(add_help_option=0)PLYparser.add_option("-h", "--help", action="callback", callback=helpFunc)PLYparser.add_option("-v", "-V", "--version", action="callback", callback=verFunc)PLYparser.add_option("-M", "--module", action="store", type="string", dest="module",default="")PLYparser.add_option("-m", "--mid", action="store", type="string", dest="mid",default="")PLYparser.add_option("-i", "--ip", action="store", type="string", dest="ip",default="")PLYparser.add_option("-a", "--all", action="store_true", dest="all",default=False)PLYparser.add_option("-s", "--super", action="store_true", dest="super",default=False)PLY(options, args) = parser.parse_args()PLYmod=options.module.split(',')PLYmid=options.midPLYip=options.ip.split(',')PLYall=options.allPLYsuper=options.superPLYcommandoption=argsPLYPLYdef check_Ip(ip):PLYTABhosts = []PLYTABhosts_ok = []PLYTABiphost = t.findHosts()PLYTABfor h in iphost:PLYTABTABhosts.append(str(h[0]))PLYTABip = {}.fromkeys(ip).keys()PLYTABfor i in ip:PLYTABTABif i not in hosts:PLYTABTABTABprint "\033[1;31;40m%s not exist,please check!\033[0m" %iPLYTABTABTAB#continuePLYTABTABTABsys.exit(3)PLYPLYdef check_ModName(mod):PLYTABmodnames = []PLYTABmodulename = t.findModName()PLYTABfor m in modulename:PLYTABTABmodnames.append(str(m[0]))PLYTABfor mn in mod:PLYTABTABif mn not in modnames:PLYTABTABTABprint "\033[1;31;40mModName %s not exist,please check!\033[0m" %mnPLYTABTABTABprint 30*'*'PLYTABTABTABprint "\033[1;33;40mInput Reference ModName:\033[0m" PLYTABTABTABfor m in modnames:PLYTABTABTABTABprint "\033[1;33;40m%s\033[0m" %m,PLYTABTABTABsys.exit(3)PLYPLY#def check_PingHost(ip):PLY#    hosts = []PLY#    for i in ip:PLY#      if subprocess.call('ping -c2 -W 1 -i 0.2 %s > /dev/null' % i, shell=True) == 0 or subprocess.call('ping -c2 -W 1 -i 0.2 %s > /dev/null' % i, shell=True) == 0:PLY#        #print '%s ping is: \033[32;1m OK \033[0m' % iPLY#        i = ''.join(i)PLY#        hosts.append(i)PLY#      else:PLY#        print '------\033[1;33;40m%s\033[0m \033[31;1mping not connect! \033[0m------' %iPLY#    return hostsPLYPLYdef checkmoduleinfo(moduleinfo):PLYTABhost = moduleinfo[0]PLYTABmoduleport = moduleinfo[1]PLYTABpath = moduleinfo[2]PLYTABmodulerunname = path.split('/')[-1]PLYTABp = ParamikoClass(host,port,user,passwd)PLYTABps = "ps -ef|grep %s.jar|grep -v supervise|grep -v grep > /dev/null && echo '1' || echo '0'" %(modulerunname)PLYTABresult_ps = p.check_cmd(ps).strip()PLYTAB##add netstatPLYTABportnumber = len(moduleport.split(";"))PLYTABif portnumber == 2:PLYTABTABcount = 0PLYTABTABfor i in moduleport.split(";"):PLYTABTABTABcmd_netstat = "netstat -an|grep LISTEN|grep tcp|grep -w '%s'|wc -l" %(i)PLYTABTABTABresult_netstat_count = int(p.check_cmd(cmd_netstat).strip())PLYTABTABTABcount = count + result_netstat_countPLYTABTABif count == portnumber and result_ps == '1':PLYTABTABTABprint "%s %s \033[1;32;40mstart OK\033[0m" %(host,modulerunname)PLYTABTABelse:PLYTABTABTABprint "%s %s \033[1;31;40mnot start\033[0m" %(host,modulerunname)PLYTABelif portnumber == 1:PLYTABTABcmd_netstat = "netstat -an|grep LISTEN|grep tcp|grep -w '%s' > /dev/null && echo '1' || echo '0'" %(moduleport)PLYTABTABresult_netstat = p.check_cmd(cmd_netstat).strip()PLYTABTABif result_netstat == '1' and result_ps == '1':PLYTABTABTABprint "%s %s \033[1;32;40mstart OK\033[0m" %(host,modulerunname)PLYTABTABelse:PLYTABTABTABprint "%s %s \033[1;31;40mnot start\033[0m" %(host,modulerunname)PLYPLYdef checkmoduleinfo_super(moduleinfo):PLYTABhost = moduleinfo[0]PLYTABmoduleport = moduleinfo[1]PLYTABpath = moduleinfo[2]PLYTABmodulerunname = path.split('/')[-1]PLYTABp = ParamikoClass(host,port,user,passwd)PLYTABps = "ps -ef|grep %s.jar|grep -v supervise|grep -v grep > /dev/null && echo '1' || echo '0'" %(modulerunname)PLYTABresult_ps = p.check_cmd(ps).strip()PLYTABsuper_ps = "ps -ef|grep supervise|grep %s|grep -v grep > /dev/null && echo '1' || echo '0'" %(modulerunname)PLYTABresult_super_ps = p.check_cmd(super_ps).strip()PLYTABportnumber = len(moduleport.split(";"))PLYTABif portnumber == 2:PLYTABTABcount = 0PLYTABTABfor i in moduleport.split(";"):PLYTABTABTABcmd_netstat = "netstat -an|grep LISTEN|grep tcp|grep -w '%s'|wc -l" %(i)PLYTABTABTABresult_netstat_count = int(p.check_cmd(cmd_netstat).strip())PLYTABTABTABcount = count + result_netstat_countPLYTABTABif count == portnumber and result_ps == '1' and result_super_ps == '1':PLYTABTABTABprint "%s %s \033[1;32;40mprogram and supervise start OK\033[0m" %(host,modulerunname)PLYTABTABelif count == portnumber and result_ps == '1' and result_super_ps == '0':PLYTABTABTABprint "%s %s \033[1;32;40mprogram start OK!\033[0m \033[1;31;40mbut supervise not OK\033[0m" %(host,modulerunname)PLYTABTABelif count == portnumber and result_ps == '0' and result_super_ps == '0':PLYTABTABTABprint "%s %s \033[1;31;40mprogram and supervise not start!\033[0m" %(host,modulerunname)PLYTABTABelif count != portnumber and result_super_ps == '1':PLYTABTABTABprint "%s %s \033[1;31;40mprogram no listen!\033[0m \033[1;32;40mbut supervise start OK!\033[0m" %(host,modulerunname)PLYTABTABelse:PLYTABTABTABprint "%s %s \033[1;31;40mprogram and supervise not start!\033[0m" %(host,modulerunname)PLYTABelif portnumber == 1:PLYTABTABcmd_netstat = "netstat -an|grep LISTEN|grep tcp|grep -w '%s' > /dev/null && echo '1' || echo '0'" %(moduleport)PLYTABTABresult_netstat = p.check_cmd(cmd_netstat).strip()PLYTABTABif result_netstat == '1' and result_ps == '1' and result_super_ps == '1':PLYTABTABTABprint "%s %s \033[1;32;40mprogram and supervise start OK\033[0m" %(host,modulerunname)PLYTABTABelif result_netstat == '1' and result_ps == '1' and result_super_ps == '0':PLYTABTABTABprint "%s %s \033[1;32;40mprogram start OK!\033[0m \033[1;31;40mbut supervise not OK\033[0m" %(host,modulerunname)PLYTABTABelif result_netstat == '1' and result_ps == '0' and result_super_ps == '0':PLYTABTABTABprint "%s %s \033[1;31;40mprogram and supervise not start!\033[0m" %(host,modulerunname)PLYTABTABelif result_netstat == '0' and result_super_ps == '1':PLYTABTABTABprint "%s %s \033[1;31;40mprogram no listen!\033[0m \033[1;32;40mbut supervise start OK!\033[0m" %(host,modulerunname)PLYTABTABelse:PLYTABTABTABprint "%s %s \033[1;31;40mprogram and supervise not start!\033[0m" %(host,modulerunname)PLYPLYdef multipoolcess(moduleinfo):PLYTABpool = multiprocessing.Pool(processes=8)PLYTABmodlen =  len(moduleinfo)PLYTABcount = modlen/2PLYTABlinfo = modlen%2PLYTABif linfo != 0:PLYTABTABcount = count+1PLYTABif mid == "head":PLYTABTABi = 0PLYTABTABwhile i < count:PLYTABTABTABpool.apply_async(checkmoduleinfo,(moduleinfo[i],))PLYTABTABTABi = i+1PLYTABelif mid == "tail":PLYTABTABi = countPLYTABTABwhile i < modlen:PLYTABTABTABpool.apply_async(checkmoduleinfo,(moduleinfo[i],))PLYTABTABTABi = i+1PLYTABelse:TABTABPLYTABTABfor i in moduleinfo:PLYTABTABTABpool.apply_async(checkmoduleinfo,(i,))PLYTABpool.close()PLYTABpool.join()PLYPLYdef multipoolcess_super(moduleinfo):PLYTABpool = multiprocessing.Pool(processes=8)PLYTABmodlen =  len(moduleinfo)PLYTABcount = modlen/2PLYTABlinfo = modlen%2PLYTABif linfo != 0:PLYTABTABcount = count+1PLYTABif mid == "head":PLYTABTABi = 0PLYTABTABwhile i < count:PLYTABTABTABpool.apply_async(checkmoduleinfo_super,(moduleinfo[i],))PLYTABTABTABi = i+1PLYTABelif mid == "tail":PLYTABTABi = countPLYTABTABwhile i < modlen:PLYTABTABTABpool.apply_async(checkmoduleinfo_super,(moduleinfo[i],))PLYTABTABTABi = i+1PLYTABelse:TABTABPLYTABTABfor i in moduleinfo:PLYTABTABTABpool.apply_async(checkmoduleinfo_super,(i,))PLYTABpool.close()PLYTABpool.join()PLYPLY#检查参数:ip,mod,mid是否合法兼容PLYif ip != ['']:PLYTABcheck_Ip(ip)PLYif mod != ['']:PLYTABcheck_ModName(mod)PLYif mid != "":PLYTABif mid != "head" and mid != "tail":PLYTABTABprint "\033[1;31;40mmid not correct,please check!\033[0m"PLYTABTABsys.exit(3)PLYif len(mod) != 1 and mid != "":PLYTABprint "\033[1;31;40mmid and several modules cannot use together,please modify!\033[0m"PLYTABsys.exit(3)PLYif ip != [''] and mid != "":PLYTABprint "\033[1;31;40mmid and ip cannot use together,please modify!\033[0m"PLYTABsys.exit(3)PLYPLYtmplist = []PLYmoduleinfo = []PLYiplist = []PLYdef moduleappend():PLYTABfor i in tmplist:PLYTABTABfor n in i:PLYTABTABTABmoduleinfo.append(n)PLYPLY#ip_checkPLYif ip != [''] and mod == [''] and super == False:PLYTABfor i in ip:PLYTABTABtmplist.append(t.findModByIP(i))PLYTABmoduleappend()PLYTABmultipoolcess(moduleinfo)PLY#ip_check_supervisePLYelif ip != [''] and mod == [''] and super == True:PLYTABfor i in ip:PLYTABTABtmplist.append(t.findModByIP(i))PLYTABmoduleappend()PLYTABmultipoolcess_super(moduleinfo)PLY#mod_checkPLYelif mod != [''] and ip == [''] and super == False:PLYTABfor m in mod:PLYTABTABtmplist.append(t.findModByModName(m))PLYTABmoduleappend()PLYTABmultipoolcess(moduleinfo)PLY#mod_check_supervisePLYelif mod != [''] and ip == [''] and super == True:PLYTABfor m in mod:PLYTABTABtmplist.append(t.findModByModName(m))PLYTABmoduleappend()PLYTABmultipoolcess_super(moduleinfo)PLY##mod_and_ip_checkPLYelif mod != [''] and ip != [''] and super == False:PLYTABfor i in ip:PLYTABTABfor m in mod:PLYTABTABTABtmplist.append(t.findModByModAndIP(i,m))PLYTABmoduleappend()PLYTABmultipoolcess(moduleinfo)PLY##mod_and_ip_check_supervisePLYelif mod != [''] and ip != [''] and super == True:PLYTABfor i in ip:PLYTABTABfor m in mod:PLYTABTABTABtmplist.append(t.findModByModAndIP(i,m))PLYTABmoduleappend()PLYTABmultipoolcess_super(moduleinfo)PLY##check_allPLYelif all == True and super == False:PLYTABip = t.findHosts()PLYTABfor i in ip:PLYTABTABiplist.append(str(i[0]))PLYTABfor i in iplist:PLYTABTABtmplist.append(t.findModByIP(i))PLYTABmoduleappend()PLYTABmultipoolcess(moduleinfo)PLY##check_all_supervisePLYelif all == True and super == True:PLYTABip = t.findHosts()PLYTABfor i in ip:PLYTABTABiplist.append(str(i[0]))PLYTABfor i in iplist:PLYTABTABtmplist.append(t.findModByIP(i))PLYTABmoduleappend()PLYTABmultipoolcess_super(moduleinfo)PLYelse:PLYTABprint('\033[1;31;40mInput Error!!!please use -h for help!!!\033[0m')PLY
